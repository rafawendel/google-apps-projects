/**********************************************
 * @namespace CardService
 ***********************************************/

/**
 * @class CardService
 */

/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/composed-email-type.html'>ComposedEmailType</a></code> enumeration.
 * 
 * @typedef {CardService.ComposedEmailType} CardService.ComposedEmailType
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/content-type.html'>ContentType</a></code> enumeration.
 * 
 * @typedef {CardService.ContentType} CardService.ContentType
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/icon.html'>Icon</a></code> enumeration.
 * 
 * @typedef {CardService.Icon} CardService.Icon
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-style.html'>ImageStyle</a></code> enumeration.
 * 
 * @typedef {CardService.ImageStyle} CardService.ImageStyle
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/load-indicator.html'>LoadIndicator</a></code> enumeration.
 * 
 * @typedef {CardService.LoadIndicator} CardService.LoadIndicator
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/notification-type.html'>NotificationType</a></code> enumeration.
 * 
 * @typedef {CardService.NotificationType} CardService.NotificationType
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/on-close.html'>OnClose</a></code> enumeration.
 * 
 * @typedef {CardService.OnClose} CardService.OnClose
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-as.html'>OpenAs</a></code> enumeration.
 * 
 * @typedef {CardService.OpenAs} CardService.OpenAs
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/selection-input-type.html'>SelectionInputType</a></code> enumeration.
 * 
 * @typedef {CardService.SelectionInputType} CardService.SelectionInputType
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button-style.html'>TextButtonStyle</a></code> enumeration.
 * 
 * @typedef {CardService.TextButtonStyle} CardService.TextButtonStyle
 */
/**
 * The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/update-draft-body-type.html'>UpdateDraftBodyType</a></code> enumeration.
 * 
 * @typedef {CardService.UpdateDraftBodyType} CardService.UpdateDraftBodyType
 */
/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code>.
 * 
 * @function CardService.newAction
 * 
 * @return {CardService.Action} an empty Action.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html'>ActionResponseBuilder</a></code>.
 * 
 * @function CardService.newActionResponseBuilder
 * 
 * @return {CardService.ActionResponseBuilder} an empty ActionResponse builder
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/authorization-action.html'>AuthorizationAction</a></code>.
 * 
 * @function CardService.newAuthorizationAction
 * 
 * @return {CardService.AuthorizationAction} an empty AuthorizationAction();
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/authorization-exception.html'>AuthorizationException</a></code>.
 * 
 * @function CardService.newAuthorizationException
 * 
 * @return {CardService.AuthorizationException} an empty AuthorizationException.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button-set.html'>ButtonSet</a></code>.
 * 
 * @function CardService.newButtonSet
 * 
 * @return {CardService.ButtonSet} an empty ButtonSet.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html'>CardAction</a></code>.
 * 
 * @function CardService.newCardAction
 * 
 * @return {CardService.CardAction} an empty CardAction.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-builder.html'>CardBuilder</a></code>.
 * 
 * @function CardService.newCardBuilder
 * 
 * @return {CardService.CardBuilder} An empty Card builder.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-header.html'>CardHeader</a></code>.
 * 
 * @function CardService.newCardHeader
 * 
 * @return {CardService.CardHeader} an empty CardHeader.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-section.html'>CardSection</a></code>.
 * 
 * @function CardService.newCardSection
 * 
 * @return {CardService.CardSection} an empty CardSection.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html'>ComposeActionResponseBuilder</a></code>.
 * 
 * @function CardService.newComposeActionResponseBuilder
 * 
 * @return {CardService.ComposeActionResponseBuilder} an empty ComposeActionResponse builder
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html'>Image</a></code>.
 * 
 * @function CardService.newImage
 * 
 * @return {CardService.Image} an empty Image.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html'>ImageButton</a></code>.
 * 
 * @function CardService.newImageButton
 * 
 * @return {CardService.ImageButton} an empty ImageButton.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html'>KeyValue</a></code>.
 * 
 * @function CardService.newKeyValue
 * 
 * @return {CardService.KeyValue} an empty KeyValue.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/navigation.html'>Navigation</a></code>.
 * 
 * @function CardService.newNavigation
 * 
 * @return {CardService.Navigation} an empty Navigation.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/notification.html'>Notification</a></code>.
 * 
 * @function CardService.newNotification
 * 
 * @return {CardService.Notification} an empty Notification.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code>.
 * 
 * @function CardService.newOpenLink
 * 
 * @return {CardService.OpenLink} an empty OpenLink.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/selection-input.html'>SelectionInput</a></code>.
 * 
 * @function CardService.newSelectionInput
 * 
 * @return {CardService.SelectionInput} an empty SelectionInput.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/suggestions.html'>Suggestions</a></code>.
 * 
 * @function CardService.newSuggestions
 * 
 * @return {CardService.Suggestions} an empty Suggestions.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/suggestions-response-builder.html'>SuggestionsResponseBuilder</a></code>.
 * 
 * @function CardService.newSuggestionsResponseBuilder
 * 
 * @return {CardService.SuggestionsResponseBuilder} an empty SuggestionsResponse builder
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/switch.html'>Switch</a></code>.
 * 
 * @function CardService.newSwitch
 * 
 * @return {CardService.Switch} an empty Switch.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html'>TextButton</a></code>.
 * 
 * @function CardService.newTextButton
 * 
 * @return {CardService.TextButton} an empty TextButton.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-input.html'>TextInput</a></code>.
 * 
 * @function CardService.newTextInput
 * 
 * @return {CardService.TextInput} an empty TextInput.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-paragraph.html'>TextParagraph</a></code>.
 * 
 * @function CardService.newTextParagraph
 * 
 * @return {CardService.TextParagraph} an empty TextParagraph.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/universal-action-response-builder.html'>UniversalActionResponseBuilder</a></code>.
 * 
 * @function CardService.newUniversalActionResponseBuilder
 * 
 * @return {CardService.UniversalActionResponseBuilder} an empty UniversalActionResponse builder
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/update-draft-action-response-builder.html'>UpdateDraftActionResponseBuilder</a></code>.
 * 
 * @function CardService.newUpdateDraftActionResponseBuilder
 * 
 * @return {CardService.UpdateDraftActionResponseBuilder} An empty UpdateDraftActionResponseBuilder.
 */


/**
 * Creates a new <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/update-draft-body-action.html'>UpdateDraftBodyAction</a></code>.
 * 
 * @function CardService.newUpdateDraftBodyAction
 * 
 * @return {CardService.UpdateDraftBodyAction} An empty UpdateDraftBodyAction.
 */



/**
 * @class CardService.Action
 */

/**
 * Sets the name of the callback function to be called. Required.
 * 
 * @function CardService.Action#setFunctionName
 * 
 * @param {String} functionName - The name of the function. You can use functions from included libraries,
 *     such as <code>Library.libFunction1</code>.
 * 
 * @return {CardService.Action} This object, for chaining.
 */


/**
 * Sets the loading indicator that displays while the action is in progress.
 * 
 * @function CardService.Action#setLoadIndicator
 * 
 * @param {CardService.LoadIndicator} loadIndicator - The indicator to display.
 * 
 * @return {CardService.Action} This object, for chaining.
 */


/**
 * @function CardService.Action#setMethodName
 * @deprecated
 * 
 * @param {String} functionName
 * 
 * @return {CardService.Action}
 */


/**
 * Allows custom parameters to be passed to the callback function. Optional.
 * 
 * @function CardService.Action#setParameters
 * 
 * @param {Object} parameters - Both keys and values must be strings.
 * 
 * @return {CardService.Action} This object, for chaining.
 */



/**
 * @class CardService.ActionResponse
 */

/**
 * @function CardService.ActionResponse#printJson
 * 
 * @return {String}
 */



/**
 * @class CardService.ActionResponseBuilder
 */

/**
 * Builds the current action response and validates it.
 * 
 * @function CardService.ActionResponseBuilder#build
 * 
 * @return {CardService.ActionResponse} a validated ActionResponse.
 */


/**
 * Sets the response to a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/navigation.html'>Navigation</a></code> action.
 * 
 * @function CardService.ActionResponseBuilder#setNavigation
 * 
 * @param {CardService.Navigation} navigation - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/navigation.html'>Navigation</a></code> to use.
 * 
 * @return {CardService.ActionResponseBuilder} this object, for chaining.
 */


/**
 * Sets the notification to display when the action is activated.
 * 
 * @function CardService.ActionResponseBuilder#setNotification
 * 
 * @param {CardService.Notification} notification - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/notification.html'>Notification</a></code> to use.
 * 
 * @return {CardService.ActionResponseBuilder} this object, for chaining.
 */


/**
 * Sets the URL to navigate to when the action is activated.
 * 
 * @function CardService.ActionResponseBuilder#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> to use.
 * 
 * @return {CardService.ActionResponseBuilder} this object, for chaining.
 */


/**
 * Sets a flag to indicate that this action changed the existing data state. For example, if the
 * action created a task or updated contact information. When this flag is set to true, services
 * such as Gmail can attempt to clear any cached state data associated with this action.
 * 
 * @function CardService.ActionResponseBuilder#setStateChanged
 * 
 * @param {Boolean} stateChanged - Whether this action has changed the existing state data. Defaults to false.
 * 
 * @return {CardService.ActionResponseBuilder} this object, for chaining.
 */



/**
 * @class CardService.AuthorizationAction
 */

/**
 * Sets the authorization URL that user is taken to from the authorization prompt. Required.
 * 
 * @function CardService.AuthorizationAction#setAuthorizationUrl
 * 
 * @param {String} authorizationUrl - the authorization URL to set.
 * 
 * @return {CardService.AuthorizationAction} this object, for chaining.
 */



/**
 * @class CardService.AuthorizationException
 */

/**
 * @function CardService.AuthorizationException#printJson
 * 
 * @return {String}
 */


/**
 * Sets the authorization URL that user is taken to from the authorization prompt. Required.
 * 
 * @function CardService.AuthorizationException#setAuthorizationUrl
 * 
 * @param {String} authUrl - the authorization URL to set.
 * 
 * @return {CardService.AuthorizationException} this object, for chaining.
 */


/**
 * The name of a function to call to generate a custom authorization prompt. Optional.
 * 
 * @function CardService.AuthorizationException#setCustomUiCallback
 * 
 * @param {String} callback - the name of the function that generates a custom authorization prompt.
 * 
 * @return {CardService.AuthorizationException} this object, for chaining.
 */


/**
 * Sets the name that is displayed to the user when asking for authorization. Required.
 * 
 * @function CardService.AuthorizationException#setResourceDisplayName
 * 
 * @param {String} name - the display name.
 * 
 * @return {CardService.AuthorizationException} this object, for chaining.
 */


/**
 * Triggers this exception to be thrown.
 * 
 * @function CardService.AuthorizationException#throwException
 * 
 * @return void
 */



/**
 * @class CardService.Button
 */

/**
 * Sets an authorization action that opens a URL to the authorization flow when the object is
 * clicked. This opens the URL in a new window. When the user finishes the authorization flow and
 * returns to the application, the add-on reloads.
 * 
 * <p>A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAuthorizationAction().setAuthorizationUrl(&#39;url&#39;);
 * CardService.newTextButton().setText(&#39;Authorize&#39;).setAuthorizationAction(action);
 * 
 * </code></pre>
 * 
 * @function CardService.Button#setAuthorizationAction
 * 
 * @param {CardService.AuthorizationAction} action - The object that specifies the authorization action to take when this element is
 *     clicked.
 * 
 * @return {CardService.Button} This object, for chaining.
 */


/**
 * Sets an action that composes a draft email when the object is clicked. A UI object can only
 * have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html#setGmailDraft(GmailDraft)'>ComposeActionResponseBuilder.setGmailDraft(draft)</a></code>.
 * 
 * <p><aside class="note"><b>Note</b>: This method doesn't set a <b>compose action</b> that is
 * used to <a href="/gmail/add-ons/how-tos/extending-compose-ui">extend the compose UI</a>.
 * Rather, this method connects this UI element to an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> that <a
 * href="/gmail/add-ons/how-tos/compose">composes draft messages</a> in Apps Script that are
 * opened in Gmail when the action completes. </aside>
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;composeEmailCallback&#39;);
 * CardService.newTextButton()
 *     .setText(&#39;Compose Email&#39;)
 *     .setComposeAction(action, CardService.ComposedEmailType.REPLY_AS_DRAFT);
 * 
 * // ...
 * 
 * function composeEmailCallback() {
 *   var thread = GmailApp.getThreadById(e.threadId);
 *   var draft = thread.createDraftReply(&#39;This is a reply&#39;);
 *   return CardService.newComposeActionResponseBuilder()
 *       .setGmailDraft(draft)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.Button#setComposeAction
 * 
 * @param {CardService.Action} action - the object that specifies the compose action to take when this element is
 *     clicked.
 * @param {CardService.ComposedEmailType} composedEmailType - an enum value that specifies whether the composed draft is a
 *     standalone or reply draft.
 * 
 * @return {CardService.Button} this object, for chaining.
 */


/**
 * Sets an action that executes when the object is clicked. A UI object can only have one of
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;notificationCallback&#39;);
 * CardService.newTextButton().setText(&#39;Create notification&#39;).setOnClickAction(action);
 * 
 * // ...
 * 
 * function notificationCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setNotification(CardService.newNotification()
 *           .setType(CardService.NotificationType.INFO)
 *           .setText(&quot;Some info to display to user&quot;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.Button#setOnClickAction
 * 
 * @param {CardService.Action} action - The action to take when this element is clicked.
 * 
 * @return {CardService.Button} This object, for chaining.
 */


/**
 * Sets an action that opens a URL in a tab when the object is clicked. Use this function when the
 * URL needs to be built or when you need to take other actions in addiiton to creating the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html#setOpenLink(OpenLink)'>ActionResponseBuilder.setOpenLink(openLink)</a></code>.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;openLinkCallback&#39;);
 * CardService.newTextButton().setText(&#39;Open Link&#39;).setOnClickOpenLinkAction(action);
 * 
 * // ...
 * 
 * function openLinkCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setOpenLink(CardService.newOpenLink()
 *           .setUrl(&#39;https://www.google.com&#39;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.Button#setOnClickOpenLinkAction
 * 
 * @param {CardService.Action} action - The object that specifies the open link action to take when this element is
 *     clicked.
 * 
 * @return {CardService.Button} This object, for chaining.
 */


/**
 * Sets a URL to be opened when the object is clicked. Use this function when the URL is already
 * known and only needs to be opened. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>,
 * or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * @function CardService.Button#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - An <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object describing the URL to open.
 * 
 * @return {CardService.Button} This object, for chaining.
 */



/**
 * @class CardService.ButtonSet
 */

/**
 * Adds a button.
 * 
 * @function CardService.ButtonSet#addButton
 * 
 * @param {CardService.Button} button - the button to add.
 * 
 * @return {CardService.ButtonSet} this object, for chaining.
 */



/**
 * @class CardService.Card
 */

/**
 * @function CardService.Card#printJson
 * 
 * @return {String}
 */



/**
 * @class CardService.CardAction
 */

/**
 * Sets an authorization action that opens a URL to the authorization flow when the object is
 * clicked. This opens the URL in a new window. When the user finishes the authorization flow and
 * returns to the application, the add-on reloads.
 * 
 * <p>A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAuthorizationAction().setAuthorizationUrl(&#39;url&#39;);
 * CardService.newTextButton().setText(&#39;Authorize&#39;).setAuthorizationAction(action);
 * 
 * </code></pre>
 * 
 * @function CardService.CardAction#setAuthorizationAction
 * 
 * @param {CardService.AuthorizationAction} action - The object that specifies the authorization action to take when this element is
 *     clicked.
 * 
 * @return {CardService.CardAction} This object, for chaining.
 */


/**
 * Sets an action that composes a draft email when the object is clicked. A UI object can only
 * have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html#setGmailDraft(GmailDraft)'>ComposeActionResponseBuilder.setGmailDraft(draft)</a></code>.
 * 
 * <p><aside class="note"><b>Note</b>: This method doesn't set a <b>compose action</b> that is
 * used to <a href="/gmail/add-ons/how-tos/extending-compose-ui">extend the compose UI</a>.
 * Rather, this method connects this UI element to an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> that <a
 * href="/gmail/add-ons/how-tos/compose">composes draft messages</a> in Apps Script that are
 * opened in Gmail when the action completes. </aside>
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;composeEmailCallback&#39;);
 * CardService.newTextButton()
 *     .setText(&#39;Compose Email&#39;)
 *     .setComposeAction(action, CardService.ComposedEmailType.REPLY_AS_DRAFT);
 * 
 * // ...
 * 
 * function composeEmailCallback() {
 *   var thread = GmailApp.getThreadById(e.threadId);
 *   var draft = thread.createDraftReply(&#39;This is a reply&#39;);
 *   return CardService.newComposeActionResponseBuilder()
 *       .setGmailDraft(draft)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.CardAction#setComposeAction
 * 
 * @param {CardService.Action} action - the object that specifies the compose action to take when this element is
 *     clicked.
 * @param {CardService.ComposedEmailType} composedEmailType - an enum value that specifies whether the composed draft is a
 *     standalone or reply draft.
 * 
 * @return {CardService.CardAction} this object, for chaining.
 */


/**
 * Sets an action that executes when the object is clicked. A UI object can only have one of
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;notificationCallback&#39;);
 * CardService.newTextButton().setText(&#39;Create notification&#39;).setOnClickAction(action);
 * 
 * // ...
 * 
 * function notificationCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setNotification(CardService.newNotification()
 *           .setType(CardService.NotificationType.INFO)
 *           .setText(&quot;Some info to display to user&quot;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.CardAction#setOnClickAction
 * 
 * @param {CardService.Action} action - The action to take when this element is clicked.
 * 
 * @return {CardService.CardAction} This object, for chaining.
 */


/**
 * Sets an action that opens a URL in a tab when the object is clicked. Use this function when the
 * URL needs to be built or when you need to take other actions in addiiton to creating the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html#setOpenLink(OpenLink)'>ActionResponseBuilder.setOpenLink(openLink)</a></code>.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;openLinkCallback&#39;);
 * CardService.newTextButton().setText(&#39;Open Link&#39;).setOnClickOpenLinkAction(action);
 * 
 * // ...
 * 
 * function openLinkCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setOpenLink(CardService.newOpenLink()
 *           .setUrl(&#39;https://www.google.com&#39;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.CardAction#setOnClickOpenLinkAction
 * 
 * @param {CardService.Action} action - The object that specifies the open link action to take when this element is
 *     clicked.
 * 
 * @return {CardService.CardAction} This object, for chaining.
 */


/**
 * Sets a URL to be opened when the object is clicked. Use this function when the URL is already
 * known and only needs to be opened. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>,
 * or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * @function CardService.CardAction#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - An <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object describing the URL to open.
 * 
 * @return {CardService.CardAction} This object, for chaining.
 */


/**
 * Sets the menu text for this action.
 * 
 * @function CardService.CardAction#setText
 * 
 * @param {String} text - the menu item text.
 * 
 * @return {CardService.CardAction} this object, for chaining.
 */



/**
 * @class CardService.CardBuilder
 */

/**
 * Adds a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html'>CardAction</a></code> to this Card.
 * 
 * @function CardService.CardBuilder#addCardAction
 * 
 * @param {CardService.CardAction} cardAction - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-action.html'>CardAction</a></code> to use.
 * 
 * @return {CardService.CardBuilder} this object, for chaining.
 */


/**
 * Adds a section to this card.
 * 
 * @function CardService.CardBuilder#addSection
 * 
 * @param {CardService.CardSection} section - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-section.html'>CardSection</a></code> to use.
 * 
 * @return {CardService.CardBuilder} this object, for chaining.
 */


/**
 * Builds the current card and validates it.
 * 
 * @function CardService.CardBuilder#build
 * 
 * @return {CardService.Card} a validated card.
 */


/**
 * Sets the header for this card.
 * 
 * @function CardService.CardBuilder#setHeader
 * 
 * @param {CardService.CardHeader} cardHeader - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card-header.html'>CardHeader</a></code> to use.
 * 
 * @return {CardService.CardBuilder} this object, for chaining.
 */


/**
 * Sets the name for this card. The name can be used for <a
 * href="/gmail/add-ons/how-tos/navigation">navigation</a>.
 * 
 * @function CardService.CardBuilder#setName
 * 
 * @param {String} name - the name.
 * 
 * @return {CardService.CardBuilder} this object, for chaining.
 */



/**
 * @class CardService.CardHeader
 */

/**
 * Sets the alternative text for the header image.
 * 
 * @function CardService.CardHeader#setImageAltText
 * 
 * @param {String} imageAltText - the alternative text for the header image.
 * 
 * @return {CardService.CardHeader} this object, for chaining.
 */


/**
 * Sets the cropping of the icon in then card header. Defaults to no crop. Optional.
 * 
 * @function CardService.CardHeader#setImageStyle
 * 
 * @param {CardService.ImageStyle} imageStyle - the style setting.
 * 
 * @return {CardService.CardHeader} this object, for chaining.
 */


/**
 * Sets the image to use in the header by providing its URL.
 * 
 * @function CardService.CardHeader#setImageUrl
 * 
 * @param {String} imageUrl - the URL address of a hosted image to use.
 * 
 * @return {CardService.CardHeader} this object, for chaining.
 */


/**
 * Sets the subtitle of the card header. Optional.
 * 
 * @function CardService.CardHeader#setSubtitle
 * 
 * @param {String} subtitle - the header subtitle text.
 * 
 * @return {CardService.CardHeader} this object, for chaining.
 */


/**
 * Sets the title of the card header. Required.
 * 
 * @function CardService.CardHeader#setTitle
 * 
 * @param {String} title - the header text.
 * 
 * @return {CardService.CardHeader} this object, for chaining.
 */



/**
 * @class CardService.CardSection
 */

/**
 * Adds the given widget to this section. Widgets are shown in the order they were added.
 * 
 * @function CardService.CardSection#addWidget
 * 
 * @param {CardService.Widget} widget - a widget to add to the section.
 * 
 * @return {CardService.CardSection} this object, for chaining.
 */


/**
 * Sets whether the section can be collapsed.
 * 
 * @function CardService.CardSection#setCollapsible
 * 
 * @param {Boolean} collapsible - the collapsible setting.
 * 
 * @return {CardService.CardSection} this object, for chaining.
 */


/**
 * Sets the header of the section. Optional.
 * 
 * @function CardService.CardSection#setHeader
 * 
 * @param {String} header - the header text.
 * 
 * @return {CardService.CardSection} this object, for chaining.
 */


/**
 * Sets the number of widgets that are still shown when this section is collapsed. The widgets
 * shown are always the first ones that were added.
 * 
 * @function CardService.CardSection#setNumUncollapsibleWidgets
 * 
 * @param {IntegerNum} numUncollapsibleWidgets - the number of widgets to show.
 * 
 * @return {CardService.CardSection} this object, for chaining.
 */



/**
 * @class CardService.ComposeActionResponse
 */

/**
 * @function CardService.ComposeActionResponse#printJson
 * 
 * @return {String}
 */



/**
 * @class CardService.ComposeActionResponseBuilder
 */

/**
 * Builds the current compose action response and validates it.
 * 
 * @function CardService.ComposeActionResponseBuilder#build
 * 
 * @return {CardService.ComposeActionResponse} A validated <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code>.
 */


/**
 * Sets the draft <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/../gmail/gmail-message.html'>GmailMessage</a></code> created
 * using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/../gmail/gmail-message.html#createDraftReply(String)'>GmailMessage.createDraftReply(body)</a></code> or
 * similar functions.
 * 
 * @function CardService.ComposeActionResponseBuilder#setGmailDraft
 * 
 * @param {GmailApp.GmailDraft} draft - The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/../gmail/gmail-draft.html'>GmailDraft</a></code> to use.
 * 
 * @return {CardService.ComposeActionResponseBuilder} This object, for chaining.
 */



/**
 * @class CardService.ComposedEmailType
 */

/**
 * A draft that is a reply to another message. Default.
 * 
 * @typedef {CardService.ComposedEmailType} CardService.ComposedEmailType.REPLY_AS_DRAFT
 */
/**
 * A draft that is a standalone message.
 * 
 * @typedef {CardService.ComposedEmailType} CardService.ComposedEmailType.STANDALONE_DRAFT
 */

/**
 * @class CardService.ContentType
 */

/**
 * Indicates that the generated content is formatted as HTML, but this content cannot be edited
 * after it is generated.
 * 
 * @typedef {CardService.ContentType} CardService.ContentType.IMMUTABLE_HTML
 */
/**
 * Indicates that the generated content is formatted as HTML. The content can be edited after it
 * is generated.
 * 
 * @typedef {CardService.ContentType} CardService.ContentType.MUTABLE_HTML
 */
/**
 * Indicates that the generated content is plain text. Default.
 * 
 * @typedef {CardService.ContentType} CardService.ContentType.TEXT
 */

/**
 * @class CardService.Icon
 */

/**
 * <img alt="Airplane flight icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/flight_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.AIRPLANE
 */
/**
 * <img alt="Bookmark icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/bookmark_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.BOOKMARK
 */
/**
 * <img alt="Bus icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/directions_bus_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.BUS
 */
/**
 * <img alt="Car icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/directions_car_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.CAR
 */
/**
 * <img alt="Clock icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/schedule_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.CLOCK
 */
/**
 * <img alt="Confirmation number icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/confirmation_num_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.CONFIRMATION_NUMBER_ICON
 */
/**
 * <img alt="Description icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/subject_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.DESCRIPTION
 */
/**
 * <img alt="Dollar icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/attach_money_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.DOLLAR
 */
/**
 * <img alt="Email icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/email_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.EMAIL
 */
/**
 * <img alt="Email icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/people_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.EVENT_PERFORMER
 */
/**
 * <img alt="Event seat icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/event_seat_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.EVENT_SEAT
 */
/**
 * <img alt="Flight arrival icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/flight_land_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.FLIGHT_ARRIVAL
 */
/**
 * <img alt="Flight departure icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/flight_takeoff_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.FLIGHT_DEPARTURE
 */
/**
 * <img alt="Hotel icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/hotel_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.HOTEL
 */
/**
 * <img alt="Hotel icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/star_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.HOTEL_ROOM_TYPE
 */
/**
 * <img alt="Invite icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/event_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.INVITE
 */
/**
 * <img alt="Map pin icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/place_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.MAP_PIN
 */
/**
 * <img alt="Membershipt icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/card_membership_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.MEMBERSHIP
 */
/**
 * <img alt="Multiple people icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/people_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.MULTIPLE_PEOPLE
 */
/**
 * No icon. Default.
 * 
 * @typedef {CardService.Icon} CardService.Icon.NONE
 */
/**
 * <img alt="Offer icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/local_offer_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.OFFER
 */
/**
 * <img alt="Person icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/person_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.PERSON
 */
/**
 * <img alt="Phone icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/call_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.PHONE
 */
/**
 * <img alt="Restaurant icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/restaurant_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.RESTAURANT_ICON
 */
/**
 * <img alt="Shopping cart icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/shopping_cart_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.SHOPPING_CART
 */
/**
 * <img alt="Star icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/star_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.STAR
 */
/**
 * <img alt="Store icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/store_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.STORE
 */
/**
 * <img alt="Ticket icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/local_attraction_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.TICKET
 */
/**
 * <img alt="Train icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/train_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.TRAIN
 */
/**
 * <img alt="Video camera icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/videocam_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.VIDEO_CAMERA
 */
/**
 * <img alt="Video play icon"
 * src="https://www.gstatic.com/images/icons/material/system/1x/play_circle_filled_grey600_48dp.png"/>
 * 
 * @typedef {CardService.Icon} CardService.Icon.VIDEO_PLAY
 */

/**
 * @class CardService.Image
 */

/**
 * Sets the alternative text of the image for accessibility. Required.
 * 
 * @function CardService.Image#setAltText
 * 
 * @param {String} altText - the alternative text to assign to this image.
 * 
 * @return {CardService.Image} this object, for chaining.
 */


/**
 * Sets an authorization action that opens a URL to the authorization flow when the object is
 * clicked. This opens the URL in a new window. When the user finishes the authorization flow and
 * returns to the application, the add-on reloads.
 * 
 * <p>A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAuthorizationAction().setAuthorizationUrl(&#39;url&#39;);
 * CardService.newTextButton().setText(&#39;Authorize&#39;).setAuthorizationAction(action);
 * 
 * </code></pre>
 * 
 * @function CardService.Image#setAuthorizationAction
 * 
 * @param {CardService.AuthorizationAction} action - The object that specifies the authorization action to take when this element is
 *     clicked.
 * 
 * @return {CardService.Image} This object, for chaining.
 */


/**
 * Sets an action that composes a draft email when the object is clicked. A UI object can only
 * have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html#setGmailDraft(GmailDraft)'>ComposeActionResponseBuilder.setGmailDraft(draft)</a></code>.
 * 
 * <p><aside class="note"><b>Note</b>: This method doesn't set a <b>compose action</b> that is
 * used to <a href="/gmail/add-ons/how-tos/extending-compose-ui">extend the compose UI</a>.
 * Rather, this method connects this UI element to an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> that <a
 * href="/gmail/add-ons/how-tos/compose">composes draft messages</a> in Apps Script that are
 * opened in Gmail when the action completes. </aside>
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;composeEmailCallback&#39;);
 * CardService.newTextButton()
 *     .setText(&#39;Compose Email&#39;)
 *     .setComposeAction(action, CardService.ComposedEmailType.REPLY_AS_DRAFT);
 * 
 * // ...
 * 
 * function composeEmailCallback() {
 *   var thread = GmailApp.getThreadById(e.threadId);
 *   var draft = thread.createDraftReply(&#39;This is a reply&#39;);
 *   return CardService.newComposeActionResponseBuilder()
 *       .setGmailDraft(draft)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.Image#setComposeAction
 * 
 * @param {CardService.Action} action - the object that specifies the compose action to take when this element is
 *     clicked.
 * @param {CardService.ComposedEmailType} composedEmailType - an enum value that specifies whether the composed draft is a
 *     standalone or reply draft.
 * 
 * @return {CardService.Image} this object, for chaining.
 */


/**
 * Sets the URL of the image, which must be publicly accessible. Required.
 * 
 * @function CardService.Image#setImageUrl
 * 
 * @param {String} url - the URL address of a hosted image to use.
 * 
 * @return {CardService.Image} this object, for chaining.
 */


/**
 * Sets an action that executes when the object is clicked. A UI object can only have one of
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;notificationCallback&#39;);
 * CardService.newTextButton().setText(&#39;Create notification&#39;).setOnClickAction(action);
 * 
 * // ...
 * 
 * function notificationCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setNotification(CardService.newNotification()
 *           .setType(CardService.NotificationType.INFO)
 *           .setText(&quot;Some info to display to user&quot;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.Image#setOnClickAction
 * 
 * @param {CardService.Action} action - The action to take when this element is clicked.
 * 
 * @return {CardService.Image} This object, for chaining.
 */


/**
 * Sets an action that opens a URL in a tab when the object is clicked. Use this function when the
 * URL needs to be built or when you need to take other actions in addiiton to creating the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html#setOpenLink(OpenLink)'>ActionResponseBuilder.setOpenLink(openLink)</a></code>.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;openLinkCallback&#39;);
 * CardService.newTextButton().setText(&#39;Open Link&#39;).setOnClickOpenLinkAction(action);
 * 
 * // ...
 * 
 * function openLinkCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setOpenLink(CardService.newOpenLink()
 *           .setUrl(&#39;https://www.google.com&#39;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.Image#setOnClickOpenLinkAction
 * 
 * @param {CardService.Action} action - The object that specifies the open link action to take when this element is
 *     clicked.
 * 
 * @return {CardService.Image} This object, for chaining.
 */


/**
 * Sets a URL to be opened when the object is clicked. Use this function when the URL is already
 * known and only needs to be opened. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>,
 * or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * @function CardService.Image#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - An <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object describing the URL to open.
 * 
 * @return {CardService.Image} This object, for chaining.
 */



/**
 * @class CardService.ImageButton
 */

/**
 * Sets the alternative text of the button for accessibility. Required.
 * 
 * @function CardService.ImageButton#setAltText
 * 
 * @param {String} altText - the alternative text to assign to this button.
 * 
 * @return {CardService.ImageButton} this object, for chaining.
 */


/**
 * Sets an authorization action that opens a URL to the authorization flow when the object is
 * clicked. This opens the URL in a new window. When the user finishes the authorization flow and
 * returns to the application, the add-on reloads.
 * 
 * <p>A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAuthorizationAction().setAuthorizationUrl(&#39;url&#39;);
 * CardService.newTextButton().setText(&#39;Authorize&#39;).setAuthorizationAction(action);
 * 
 * </code></pre>
 * 
 * @function CardService.ImageButton#setAuthorizationAction
 * 
 * @param {CardService.AuthorizationAction} action - The object that specifies the authorization action to take when this element is
 *     clicked.
 * 
 * @return {CardService.ImageButton} This object, for chaining.
 */


/**
 * Sets an action that composes a draft email when the object is clicked. A UI object can only
 * have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html#setGmailDraft(GmailDraft)'>ComposeActionResponseBuilder.setGmailDraft(draft)</a></code>.
 * 
 * <p><aside class="note"><b>Note</b>: This method doesn't set a <b>compose action</b> that is
 * used to <a href="/gmail/add-ons/how-tos/extending-compose-ui">extend the compose UI</a>.
 * Rather, this method connects this UI element to an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> that <a
 * href="/gmail/add-ons/how-tos/compose">composes draft messages</a> in Apps Script that are
 * opened in Gmail when the action completes. </aside>
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;composeEmailCallback&#39;);
 * CardService.newTextButton()
 *     .setText(&#39;Compose Email&#39;)
 *     .setComposeAction(action, CardService.ComposedEmailType.REPLY_AS_DRAFT);
 * 
 * // ...
 * 
 * function composeEmailCallback() {
 *   var thread = GmailApp.getThreadById(e.threadId);
 *   var draft = thread.createDraftReply(&#39;This is a reply&#39;);
 *   return CardService.newComposeActionResponseBuilder()
 *       .setGmailDraft(draft)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.ImageButton#setComposeAction
 * 
 * @param {CardService.Action} action - the object that specifies the compose action to take when this element is
 *     clicked.
 * @param {CardService.ComposedEmailType} composedEmailType - an enum value that specifies whether the composed draft is a
 *     standalone or reply draft.
 * 
 * @return {CardService.ImageButton} this object, for chaining.
 */


/**
 * Sets a predefined <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/icon.html'>Icon</a></code> to display on the button. Either this or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setIconUrl(String)'>setIconUrl(url)</a></code>
 * must be used to define the button image.
 * 
 * @function CardService.ImageButton#setIcon
 * 
 * @param {CardService.Icon} icon - one of the predefined <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/icon.html'>Icon</a></code> values.
 * 
 * @return {CardService.ImageButton} this object, for chaining.
 */


/**
 * Sets the URL of an image to use as this button's icon. Either this or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setIcon(Icon)'>setIcon(icon)</a></code> must be
 * used to define the button image.
 * 
 * @function CardService.ImageButton#setIconUrl
 * 
 * @param {String} url - the URL address of a hosted image to use as this button's icon.
 * 
 * @return {CardService.ImageButton} this object, for chaining.
 */


/**
 * Sets an action that executes when the object is clicked. A UI object can only have one of
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;notificationCallback&#39;);
 * CardService.newTextButton().setText(&#39;Create notification&#39;).setOnClickAction(action);
 * 
 * // ...
 * 
 * function notificationCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setNotification(CardService.newNotification()
 *           .setType(CardService.NotificationType.INFO)
 *           .setText(&quot;Some info to display to user&quot;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.ImageButton#setOnClickAction
 * 
 * @param {CardService.Action} action - The action to take when this element is clicked.
 * 
 * @return {CardService.ImageButton} This object, for chaining.
 */


/**
 * Sets an action that opens a URL in a tab when the object is clicked. Use this function when the
 * URL needs to be built or when you need to take other actions in addiiton to creating the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html#setOpenLink(OpenLink)'>ActionResponseBuilder.setOpenLink(openLink)</a></code>.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;openLinkCallback&#39;);
 * CardService.newTextButton().setText(&#39;Open Link&#39;).setOnClickOpenLinkAction(action);
 * 
 * // ...
 * 
 * function openLinkCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setOpenLink(CardService.newOpenLink()
 *           .setUrl(&#39;https://www.google.com&#39;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.ImageButton#setOnClickOpenLinkAction
 * 
 * @param {CardService.Action} action - The object that specifies the open link action to take when this element is
 *     clicked.
 * 
 * @return {CardService.ImageButton} This object, for chaining.
 */


/**
 * Sets a URL to be opened when the object is clicked. Use this function when the URL is already
 * known and only needs to be opened. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>,
 * or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/image-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * @function CardService.ImageButton#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - An <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object describing the URL to open.
 * 
 * @return {CardService.ImageButton} This object, for chaining.
 */



/**
 * @class CardService.ImageStyle
 */

/**
 * Crop to a circle shape.
 * 
 * @typedef {CardService.ImageStyle} CardService.ImageStyle.CIRCLE
 */
/**
 * No cropping. Default.
 * 
 * @typedef {CardService.ImageStyle} CardService.ImageStyle.SQUARE
 */

/**
 * @class CardService.KeyValue
 */

/**
 * Sets an authorization action that opens a URL to the authorization flow when the object is
 * clicked. This opens the URL in a new window. When the user finishes the authorization flow and
 * returns to the application, the add-on reloads.
 * 
 * <p>A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAuthorizationAction().setAuthorizationUrl(&#39;url&#39;);
 * CardService.newTextButton().setText(&#39;Authorize&#39;).setAuthorizationAction(action);
 * 
 * </code></pre>
 * 
 * @function CardService.KeyValue#setAuthorizationAction
 * 
 * @param {CardService.AuthorizationAction} action - The object that specifies the authorization action to take when this element is
 *     clicked.
 * 
 * @return {CardService.KeyValue} This object, for chaining.
 */


/**
 * Sets the label text to be used as the key. Displayed below the text-content and supports <a
 * href="/gmail/add-ons/concepts/widgets#text_formatting">basic HTML formatting</a>
 * 
 * @function CardService.KeyValue#setBottomLabel
 * 
 * @param {String} text - the label text.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/button.html'>Button</a></code> that is displayed to the right of the context. A <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html'>KeyValue</a></code> can
 * only support one button or one switch.
 * 
 * @function CardService.KeyValue#setButton
 * 
 * @param {CardService.Button} button - the button to add.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets an action that composes a draft email when the object is clicked. A UI object can only
 * have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html#setGmailDraft(GmailDraft)'>ComposeActionResponseBuilder.setGmailDraft(draft)</a></code>.
 * 
 * <p><aside class="note"><b>Note</b>: This method doesn't set a <b>compose action</b> that is
 * used to <a href="/gmail/add-ons/how-tos/extending-compose-ui">extend the compose UI</a>.
 * Rather, this method connects this UI element to an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> that <a
 * href="/gmail/add-ons/how-tos/compose">composes draft messages</a> in Apps Script that are
 * opened in Gmail when the action completes. </aside>
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;composeEmailCallback&#39;);
 * CardService.newTextButton()
 *     .setText(&#39;Compose Email&#39;)
 *     .setComposeAction(action, CardService.ComposedEmailType.REPLY_AS_DRAFT);
 * 
 * // ...
 * 
 * function composeEmailCallback() {
 *   var thread = GmailApp.getThreadById(e.threadId);
 *   var draft = thread.createDraftReply(&#39;This is a reply&#39;);
 *   return CardService.newComposeActionResponseBuilder()
 *       .setGmailDraft(draft)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.KeyValue#setComposeAction
 * 
 * @param {CardService.Action} action - the object that specifies the compose action to take when this element is
 *     clicked.
 * @param {CardService.ComposedEmailType} composedEmailType - an enum value that specifies whether the composed draft is a
 *     standalone or reply draft.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets the text to be used as the value. Supports <a
 * href="/gmail/add-ons/concepts/widgets#text_formatting">basic HTML formatting</a>. Required.
 * 
 * @function CardService.KeyValue#setContent
 * 
 * @param {String} text - the text content for this widget.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets the icon to be used as the key.
 * 
 * @function CardService.KeyValue#setIcon
 * 
 * @param {CardService.Icon} icon - one of the predefined <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/icon.html'>Icon</a></code> values.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets the alternative text for the icon.
 * 
 * @function CardService.KeyValue#setIconAltText
 * 
 * @param {String} altText - the alternative text for the icon.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets the URL of the icon to be used as the key.
 * 
 * @function CardService.KeyValue#setIconUrl
 * 
 * @param {String} url - the URL address of a hosted image to use as an icon.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets whether the value text should be displayed on a single line or multiple lines.
 * 
 * @function CardService.KeyValue#setMultiline
 * 
 * @param {Boolean} multiline - the multiline setting.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets an action that executes when the object is clicked. A UI object can only have one of
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;notificationCallback&#39;);
 * CardService.newTextButton().setText(&#39;Create notification&#39;).setOnClickAction(action);
 * 
 * // ...
 * 
 * function notificationCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setNotification(CardService.newNotification()
 *           .setType(CardService.NotificationType.INFO)
 *           .setText(&quot;Some info to display to user&quot;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.KeyValue#setOnClickAction
 * 
 * @param {CardService.Action} action - The action to take when this element is clicked.
 * 
 * @return {CardService.KeyValue} This object, for chaining.
 */


/**
 * Sets an action that opens a URL in a tab when the object is clicked. Use this function when the
 * URL needs to be built or when you need to take other actions in addiiton to creating the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html#setOpenLink(OpenLink)'>ActionResponseBuilder.setOpenLink(openLink)</a></code>.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;openLinkCallback&#39;);
 * CardService.newTextButton().setText(&#39;Open Link&#39;).setOnClickOpenLinkAction(action);
 * 
 * // ...
 * 
 * function openLinkCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setOpenLink(CardService.newOpenLink()
 *           .setUrl(&#39;https://www.google.com&#39;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.KeyValue#setOnClickOpenLinkAction
 * 
 * @param {CardService.Action} action - The object that specifies the open link action to take when this element is
 *     clicked.
 * 
 * @return {CardService.KeyValue} This object, for chaining.
 */


/**
 * Sets a URL to be opened when the object is clicked. Use this function when the URL is already
 * known and only needs to be opened. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>,
 * or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * @function CardService.KeyValue#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - An <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object describing the URL to open.
 * 
 * @return {CardService.KeyValue} This object, for chaining.
 */


/**
 * Sets the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/switch.html'>Switch</a></code> that is displayed to the right of the content. A <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/key-value.html'>KeyValue</a></code> can
 * only support one button or one switch.
 * 
 * @function CardService.KeyValue#setSwitch
 * 
 * @param {CardService.Switch} switchToSet - the switch to add.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */


/**
 * Sets the label text to be used as the key. Displayed above the text-content and supports <a
 * href="/gmail/add-ons/concepts/widgets#text_formatting">basic HTML formatting</a>.
 * 
 * @function CardService.KeyValue#setTopLabel
 * 
 * @param {String} text - the label text.
 * 
 * @return {CardService.KeyValue} this object, for chaining.
 */



/**
 * @class CardService.LoadIndicator
 */

/**
 * Do not use an indicator.
 * 
 * @typedef {CardService.LoadIndicator} CardService.LoadIndicator.NONE
 */
/**
 * Use a spinner indicator. Default.
 * 
 * @typedef {CardService.LoadIndicator} CardService.LoadIndicator.SPINNER
 */

/**
 * @class CardService.Navigation
 */

/**
 * Pops a card from the navigation stack. Can be chained with other card navigation actions.
 * 
 * @function CardService.Navigation#popCard
 * 
 * @return {CardService.Navigation} this object, for chaining.
 */


/**
 * Pops to the specified card by its card name. Can be chained with other card navigation actions.
 * 
 * @function CardService.Navigation#popToNamedCard
 * 
 * @param {String} cardName - the name of the card to navigate to.
 * 
 * @return {CardService.Navigation} this object, for chaining.
 */


/**
 * Pops the card stack to the root card. Can be chained with other card navigation actions.
 * 
 * @function CardService.Navigation#popToRoot
 * 
 * @return {CardService.Navigation} this object, for chaining.
 */


/**
 * @function CardService.Navigation#printJson
 * 
 * @return {String}
 */


/**
 * Pushes the given card onto the stack. Can be chained with other card navigation actions.
 * 
 * @function CardService.Navigation#pushCard
 * 
 * @param {CardService.Card} card - a card to add to the stack.
 * 
 * @return {CardService.Navigation} this object, for chaining.
 */


/**
 * Does an in-place replacement of the current card. Can be chained with other card navigation
 * actions.
 * 
 * @function CardService.Navigation#updateCard
 * 
 * @param {CardService.Card} card - a card to replace the current card with.
 * 
 * @return {CardService.Navigation} this object, for chaining.
 */



/**
 * @class CardService.Notification
 */

/**
 * Sets the text to show in the notification. Required.
 * 
 * @function CardService.Notification#setText
 * 
 * @param {String} text - the notification text.
 * 
 * @return {CardService.Notification} this object, for chaining.
 */


/**
 * Sets the notification type to show. Required.
 * 
 * @function CardService.Notification#setType
 * 
 * @param {CardService.NotificationType} type - the notification type.
 * 
 * @return {CardService.Notification} this object, for chaining.
 */



/**
 * @class CardService.NotificationType
 */

/**
 * An error-level notification.
 * 
 * @typedef {CardService.NotificationType} CardService.NotificationType.ERROR
 */
/**
 * An info-level notification. Default.
 * 
 * @typedef {CardService.NotificationType} CardService.NotificationType.INFO
 */
/**
 * A warning-level notification.
 * 
 * @typedef {CardService.NotificationType} CardService.NotificationType.WARNING
 */

/**
 * @class CardService.OnClose
 */

/**
 * Do nothing on close. Default.
 * 
 * @typedef {CardService.OnClose} CardService.OnClose.NOTHING
 */
/**
 * Reload the add-on on closing the URL.
 * 
 * @typedef {CardService.OnClose} CardService.OnClose.RELOAD_ADD_ON
 */

/**
 * @class CardService.OpenAs
 */

/**
 * Open in a full window or tab. Default.
 * 
 * @typedef {CardService.OpenAs} CardService.OpenAs.FULL_SIZE
 */
/**
 * Open as an overlay such as a pop-up.
 * 
 * @typedef {CardService.OpenAs} CardService.OpenAs.OVERLAY
 */

/**
 * @class CardService.OpenLink
 */

/**
 * Sets the behavior of the URL action when the URL window or tab is closed.
 * 
 * @function CardService.OpenLink#setOnClose
 * 
 * @param {CardService.OnClose} onClose - the closing setting.
 * 
 * @return {CardService.OpenLink} this object, for chaining.
 */


/**
 * Sets the behavior of URL when it is opened.
 * 
 * @function CardService.OpenLink#setOpenAs
 * 
 * @param {CardService.OpenAs} openAs - the opening setting.
 * 
 * @return {CardService.OpenLink} this object, for chaining.
 */


/**
 * Sets the URL to be opened. The URL must match a prefix <a
 * href="/gmail/add-ons/concepts/manifests#manifest_structure_for_gmail_add-ons">whitelisted in
 * the manifest</a>.
 * 
 * @function CardService.OpenLink#setUrl
 * 
 * @param {String} url - the URL to open.
 * 
 * @return {CardService.OpenLink} this object, for chaining.
 */



/**
 * @class CardService.SelectionInput
 */

/**
 * Adds a new item that can be selected.
 * 
 * @function CardService.SelectionInput#addItem
 * 
 * @param {Object} text - the text to be shown for this item. Non-string primitive arguments are converted to
 *     strings automatically.
 * @param {Object} value - the form input value that is sent via the callback. Non-string primitive arguments
 *     are converted to strings automatically.
 * @param {Boolean} selected - whether the item should be start as selected or un-selected.
 * 
 * @return {CardService.SelectionInput} this object, for chaining.
 */


/**
 * Sets the key that identifies this selection input in the event object that is generated when
 * there is a UI interaction. Not visible to the user. Required, must be unique.
 * 
 * @function CardService.SelectionInput#setFieldName
 * 
 * @param {String} fieldName - the name to assign to this input.
 * 
 * @return {CardService.SelectionInput} this object, for chaining.
 */


/**
 * Sets an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> to be performed whenever the selection input changes.
 * 
 * @function CardService.SelectionInput#setOnChangeAction
 * 
 * @param {CardService.Action} action - the action to take.
 * 
 * @return {CardService.SelectionInput} this object, for chaining.
 */


/**
 * Sets the title to be shown ahead of the input field.
 * 
 * @function CardService.SelectionInput#setTitle
 * 
 * @param {String} title - the input field title.
 * 
 * @return {CardService.SelectionInput} this object, for chaining.
 */


/**
 * Sets the type of this input. Defaults to <code>CHECKBOX</code>.
 * 
 * @function CardService.SelectionInput#setType
 * 
 * @param {CardService.SelectionInputType} type - the selection type.
 * 
 * @return {CardService.SelectionInput} this object, for chaining.
 */



/**
 * @class CardService.SelectionInputType
 */

/**
 * Checkbox input style. Default.
 * 
 * @typedef {CardService.SelectionInputType} CardService.SelectionInputType.CHECK_BOX
 */
/**
 * Dropdown menu selection input style.
 * 
 * @typedef {CardService.SelectionInputType} CardService.SelectionInputType.DROPDOWN
 */
/**
 * Radio buton input style. At most one item in the group can be selected.
 * 
 * @typedef {CardService.SelectionInputType} CardService.SelectionInputType.RADIO_BUTTON
 */

/**
 * @class CardService.Suggestions
 */

/**
 * Add a text suggestion.
 * 
 * @function CardService.Suggestions#addSuggestion
 * 
 * @param {String} suggestion - the suggestion text.
 * 
 * @return {CardService.Suggestions} this object, for chaining.
 */


/**
 * Add a list of text suggestions.
 * 
 * @function CardService.Suggestions#addSuggestions
 * 
 * @param {Object[]} suggestions - an array of string suggestions.
 * 
 * @return {CardService.Suggestions} this object, for chaining.
 */



/**
 * @class CardService.SuggestionsResponse
 */

/**
 * @function CardService.SuggestionsResponse#printJson
 * 
 * @return {String}
 */



/**
 * @class CardService.SuggestionsResponseBuilder
 */

/**
 * Builds the current suggestions response and validates it.
 * 
 * @function CardService.SuggestionsResponseBuilder#build
 * 
 * @return {CardService.SuggestionsResponse} a validated SuggestionsResponse.
 */


/**
 * Sets the suggestions used in auto complete in text fields.
 * 
 * @function CardService.SuggestionsResponseBuilder#setSuggestions
 * 
 * @param {CardService.Suggestions} suggestions - the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/suggestions.html'>Suggestions</a></code> to use.
 * 
 * @return {CardService.SuggestionsResponseBuilder} this object.
 */



/**
 * @class CardService.Switch
 */

/**
 * Sets the key that identifies this switch in the event object that is generated when there is a
 * UI interaction. Not visible to the user. Required.
 * 
 * <p>Unlike other form fields, this field name does not need to be unique. The form input values
 * for switches using the same field name are returned as an array. The array consists of the
 * values for all enabled switches with that field name.
 * 
 * @function CardService.Switch#setFieldName
 * 
 * @param {String} fieldName - the key that is used to identify this switch.
 * 
 * @return {CardService.Switch} this object, for chaining.
 */


/**
 * Sets the action to take when the switch is toggled.
 * 
 * @function CardService.Switch#setOnChangeAction
 * 
 * @param {CardService.Action} action - the action to take when the switch is toggled.
 * 
 * @return {CardService.Switch} this object, for chaining.
 */


/**
 * Sets whether this switch should start as selected or unselected.
 * 
 * @function CardService.Switch#setSelected
 * 
 * @param {Boolean} selected - the starting switch state setting.
 * 
 * @return {CardService.Switch} this object, for chaining.
 */


/**
 * Sets the value that is sent as the form input when this switch is toggled on.
 * 
 * @function CardService.Switch#setValue
 * 
 * @param {String} value - the value associated with the name when the switch is on. When this is sent to the
 *     form callback, it is always represented as a string.
 * 
 * @return {CardService.Switch} this object, for chaining.
 */



/**
 * @class CardService.TextButton
 */

/**
 * Sets an authorization action that opens a URL to the authorization flow when the object is
 * clicked. This opens the URL in a new window. When the user finishes the authorization flow and
 * returns to the application, the add-on reloads.
 * 
 * <p>A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAuthorizationAction().setAuthorizationUrl(&#39;url&#39;);
 * CardService.newTextButton().setText(&#39;Authorize&#39;).setAuthorizationAction(action);
 * 
 * </code></pre>
 * 
 * @function CardService.TextButton#setAuthorizationAction
 * 
 * @param {CardService.AuthorizationAction} action - The object that specifies the authorization action to take when this element is
 *     clicked.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets the background color for <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button-style.html#FILLED'>TextButtonStyle.FILLED</a></code> button. If unset for a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button-style.html#FILLED'>TextButtonStyle.FILLED</a></code> button, the button uses the secondary color defined in the add-on <a
 * href="/gmail/add-ons/concepts/manifests#manifest_structure_for_gmail_add-ons">manifest</a>.
 * This method is a no-op for <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button-style.html#TEXT'>TextButtonStyle.TEXT</a></code> buttons.
 * 
 * @function CardService.TextButton#setBackgroundColor
 * 
 * @param {String} backgroundColor - The color in #rgb format.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets an action that composes a draft email when the object is clicked. A UI object can only
 * have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response.html'>ComposeActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder.html#setGmailDraft(GmailDraft)'>ComposeActionResponseBuilder.setGmailDraft(draft)</a></code>.
 * 
 * <p><aside class="note"><b>Note</b>: This method doesn't set a <b>compose action</b> that is
 * used to <a href="/gmail/add-ons/how-tos/extending-compose-ui">extend the compose UI</a>.
 * Rather, this method connects this UI element to an <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> that <a
 * href="/gmail/add-ons/how-tos/compose">composes draft messages</a> in Apps Script that are
 * opened in Gmail when the action completes. </aside>
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;composeEmailCallback&#39;);
 * CardService.newTextButton()
 *     .setText(&#39;Compose Email&#39;)
 *     .setComposeAction(action, CardService.ComposedEmailType.REPLY_AS_DRAFT);
 * 
 * // ...
 * 
 * function composeEmailCallback() {
 *   var thread = GmailApp.getThreadById(e.threadId);
 *   var draft = thread.createDraftReply(&#39;This is a reply&#39;);
 *   return CardService.newComposeActionResponseBuilder()
 *       .setGmailDraft(draft)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.TextButton#setComposeAction
 * 
 * @param {CardService.Action} action - the object that specifies the compose action to take when this element is
 *     clicked.
 * @param {CardService.ComposedEmailType} composedEmailType - an enum value that specifies whether the composed draft is a
 *     standalone or reply draft.
 * 
 * @return {CardService.TextButton} this object, for chaining.
 */


/**
 * Sets whether the button is disabled. A disabled button is greyed out and cannot be clicked.
 * 
 * @function CardService.TextButton#setDisabled
 * 
 * @param {Boolean} disabled - The disabled state.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets an action that executes when the object is clicked. A UI object can only have one of
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;notificationCallback&#39;);
 * CardService.newTextButton().setText(&#39;Create notification&#39;).setOnClickAction(action);
 * 
 * // ...
 * 
 * function notificationCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setNotification(CardService.newNotification()
 *           .setType(CardService.NotificationType.INFO)
 *           .setText(&quot;Some info to display to user&quot;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.TextButton#setOnClickAction
 * 
 * @param {CardService.Action} action - The action to take when this element is clicked.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets an action that opens a URL in a tab when the object is clicked. Use this function when the
 * URL needs to be built or when you need to take other actions in addiiton to creating the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>, or
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * <p>The <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response.html'>ActionResponse</a></code> object configured using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action-response-builder.html#setOpenLink(OpenLink)'>ActionResponseBuilder.setOpenLink(openLink)</a></code>.
 * 
 * <pre class="prettyprint"><code>
 * // ...
 * 
 * var action = CardService.newAction().setFunctionName(&#39;openLinkCallback&#39;);
 * CardService.newTextButton().setText(&#39;Open Link&#39;).setOnClickOpenLinkAction(action);
 * 
 * // ...
 * 
 * function openLinkCallback() {
 *   return CardService.newActionResponseBuilder()
 *       .setOpenLink(CardService.newOpenLink()
 *           .setUrl(&#39;https://www.google.com&#39;))
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.TextButton#setOnClickOpenLinkAction
 * 
 * @param {CardService.Action} action - The object that specifies the open link action to take when this element is
 *     clicked.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets a URL to be opened when the object is clicked. Use this function when the URL is already
 * known and only needs to be opened. A UI object can only have one of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOpenLink(OpenLink)'>setOpenLink(openLink)</a></code>,
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickAction(Action)'>setOnClickAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setOnClickOpenLinkAction(Action)'>setOnClickOpenLinkAction(action)</a></code>, <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setAuthorizationAction(AuthorizationAction)'>setAuthorizationAction(action)</a></code>,
 * or <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button.html#setComposeAction(Action,ComposedEmailType)'>setComposeAction(action, composedEmailType)</a></code> set.
 * 
 * @function CardService.TextButton#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - An <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/open-link.html'>OpenLink</a></code> object describing the URL to open.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets the text to be displayed on the button.
 * 
 * @function CardService.TextButton#setText
 * 
 * @param {String} text - The text that appears on the button to identify it.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */


/**
 * Sets the button style. If unset, it defaults to <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/text-button-style.html#TEXT'>TextButtonStyle.TEXT</a></code> button.
 * 
 * @function CardService.TextButton#setTextButtonStyle
 * 
 * @param {CardService.TextButtonStyle} textButtonStyle - The button style.
 * 
 * @return {CardService.TextButton} This object, for chaining.
 */



/**
 * @class CardService.TextButtonStyle
 */

/**
 * Text button with colored background.
 * 
 * @typedef {CardService.TextButtonStyle} CardService.TextButtonStyle.FILLED
 */
/**
 * Normal text button with clear background. Default.
 * 
 * @typedef {CardService.TextButtonStyle} CardService.TextButtonStyle.TEXT
 */

/**
 * @class CardService.TextInput
 */

/**
 * Sets the key that identifies this text input in the event object that is generated when there
 * is a UI interaction. Not visible to the user. Required, must be unique.
 * 
 * @function CardService.TextInput#setFieldName
 * 
 * @param {String} fieldName - the key that is used to identify this input.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets a hint for the text input. Used to give the user extra guidance on what to input. E.g., a
 * hint could describe formatting ("xxx-xxx-xxxx") for a phone number field.
 * 
 * @function CardService.TextInput#setHint
 * 
 * @param {String} hint - the text hint to display when the input is empty
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets whether the input text shows on one line or multiple lines.
 * 
 * @function CardService.TextInput#setMultiline
 * 
 * @param {Boolean} multiline - the multiline setting.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets an action to be performed whenever the text input changes.
 * 
 * @function CardService.TextInput#setOnChangeAction
 * 
 * @param {CardService.Action} action - the action to take.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets the suggestions for autocompletion in the text field.
 * 
 * @function CardService.TextInput#setSuggestions
 * 
 * @param {CardService.Suggestions} suggestions - the collection of suggestions to use.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets the callback action to fetch suggestions based on user input for autocompletion. The
 * <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/action.html'>Action</a></code> parameter must specify a callback function that returns a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/suggestions-response.html'>SuggestionsResponse</a></code> object.
 * 
 * <pre class="prettyprint"><code>
 * var action = CardService.newAction()
 *     .setFunctionName(&#39;suggestionCallback&#39;)
 *     .setParameters({&#39;numSuggestions&#39;: 3});
 * 
 * CardService.newTextInput()
 *     .setFieldName(&#39;option-field&#39;)
 *     .setTitle(&#39;Option Selected&#39;)
 *     .setSuggestionsAction(action);
 * 
 * // ...
 * 
 * function suggestionCallback(e) {
 *   var suggestions = CardService.newSuggestions();
 *   var numSuggestions = parseInt(e.parameter[&#39;numSuggestions&#39;]);
 *   for(var i = 1; i &lt;= numSuggestions; i++) {
 *     suggestions.addSuggestion(&#39;Suggestion &#39; + i);
 *   }
 *   return CardService.newSuggestionsResponseBuilder()
 *       .setSuggestions(suggestions)
 *       .build();
 * }
 * </code></pre>
 * 
 * @function CardService.TextInput#setSuggestionsAction
 * 
 * @param {CardService.Action} suggestionsAction - the action that fetches suggestions for this input.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets the title to be shown above the input field. Required.
 * 
 * @function CardService.TextInput#setTitle
 * 
 * @param {String} title - the text label for this input.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */


/**
 * Sets the pre-filled value to be set in the input field.
 * 
 * @function CardService.TextInput#setValue
 * 
 * @param {String} value - the default value placed in the input. It will always represented as a string in
 *     the form callback parameters.
 * 
 * @return {CardService.TextInput} this object, for chaining.
 */



/**
 * @class CardService.TextParagraph
 */

/**
 * Sets the text of the paragraph. Required.
 * 
 * @function CardService.TextParagraph#setText
 * 
 * @param {String} text - the text to display.
 * 
 * @return {CardService.TextParagraph} this object, for chaining.
 */



/**
 * @class CardService.UniversalActionResponse
 */

/**
 * @function CardService.UniversalActionResponse#printJson
 * 
 * @return {String}
 */



/**
 * @class CardService.UniversalActionResponseBuilder
 */

/**
 * Builds the current universal action response and validates it.
 * 
 * @function CardService.UniversalActionResponseBuilder#build
 * 
 * @return {CardService.UniversalActionResponse} a validated UniversalActionResponse.
 */


/**
 * Displays the add-on with the specified cards.
 * 
 * @function CardService.UniversalActionResponseBuilder#displayAddOnCards
 * 
 * @param {Object[]} cardObjects - an array of <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/card.html'>Card</a></code>s to display.
 * 
 * @return {CardService.UniversalActionResponseBuilder} this object, for chaining.
 */


/**
 * Sets the URL to open when the universal action is selected.
 * 
 * @function CardService.UniversalActionResponseBuilder#setOpenLink
 * 
 * @param {CardService.OpenLink} openLink - the link object to use.
 * 
 * @return {CardService.UniversalActionResponseBuilder} this object, for chaining.
 */



/**
 * @class CardService.UpdateDraftActionResponse
 */

/**
 * @function CardService.UpdateDraftActionResponse#printJson
 * 
 * @return {String}
 */



/**
 * @class CardService.UpdateDraftActionResponseBuilder
 */

/**
 * Builds the current update draft action response and validates it.
 * 
 * @function CardService.UpdateDraftActionResponseBuilder#build
 * 
 * @return {CardService.UpdateDraftActionResponse} A validated draft action response.
 */


/**
 * Set an action that updates the email body of a draft.
 * 
 * @function CardService.UpdateDraftActionResponseBuilder#setUpdateDraftBodyAction
 * 
 * @param {CardService.UpdateDraftBodyAction} updateDraftBodyAction - The action that updates the draft body.
 * 
 * @return {CardService.UpdateDraftActionResponseBuilder} This object, for chaining.
 */



/**
 * @class CardService.UpdateDraftBodyAction
 */

/**
 * Add update content of a <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/update-draft-body-action.html'>UpdateDraftBodyAction</a></code>. The content type of the <code>content</code>
 * is specified by <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/content-type.html'>ContentType</a></code>.
 * 
 * @function CardService.UpdateDraftBodyAction#addUpdateContent
 * 
 * @param {String} content - The content to insert to the email draft.
 * @param {CardService.ContentType} contentType - The content type of the content to be inserted.
 * 
 * @return {CardService.UpdateDraftBodyAction} This object, for chaining.
 */


/**
 * Set the <code><a target='_blank' href='https://developers.google.com/apps-script/reference/card-service/update-draft-body-type.html'>UpdateDraftBodyType</a></code> of this update action on the draft body.
 * 
 * @function CardService.UpdateDraftBodyAction#setUpdateType
 * 
 * @param {CardService.UpdateDraftBodyType} updateType - The type of update to be performed on an email draft.
 * 
 * @return {CardService.UpdateDraftBodyAction} This object, for chaining.
 */



/**
 * @class CardService.UpdateDraftBodyType
 */

/**
 * Default. Update actions insert content at the current cursor position, replacing any selected
 * content.
 * 
 * @typedef {CardService.UpdateDraftBodyType} CardService.UpdateDraftBodyType.IN_PLACE_INSERT
 */

/**
 * @class CardService.Widget
 */


